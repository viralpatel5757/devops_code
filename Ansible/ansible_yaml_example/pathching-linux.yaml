---
- hosts: patching
  become: true
  become_user: root
  tasks:
          - name: Verify App/Database are running or not
            shell: if ps -eaf| egrep 'httpd'| grep -v grep > /dev/null; then echo 'process_running'; else echo 'process_not_running'; fi
            ignore_errors: true
            register: appr_proc_check
          - debug: msg="{{ appr_proc_check.stdout }}"
          - name: Decision point to start patching
            fail:
                    msg="{{ inventory_hostname }} having running applications, please stop first and then attempt patching"
            when: appr_proc_check.stdout == "process_running"
          - name: Copy the Kernel Patch Repo File
            copy:
                    src: /home/sverma/patching/kernel.repo
                    dest: /etc/yum.repos.d/
          - name: Current Kernel Version
            shell: uname -r
            register: curr_ker
          - name: Initiating Patching
            yum:
                    name=kernel
                    state=latest
            register: yum_update
          - debug: msg="kernel has been updated"
            when: yum_update.rc == 0
          - name: Check if reboot is required or not
            shell: kernel_new=$(rpm -qa --last kernel | head -1| awk '{print $1}'| sed 's/kernel-//g'); kernel_now=$(uname -r); if [[ $kernel_new != $kernel_now ]]; then echo "reboot is required"; else echo "reboot is not required"; fi
            ignore_errors: true
            register: reboot_check
          - debug: msg="{{ reboot_check.stdout }}"
          - name: Reboot the system after patching
            shell: "shutdown -r now"
            async: 1
            poll: 0
          - name: Wait the system to come up
            pause:
                    minutes: 1
          - name: New Kernel Version
            shell: uname -r
            register: new_ker
          - debug: msg="New Kernel Version is {{ new_ker.stdout }} and old Kernel Version was {{ curr_ker.stdout }}"